# Generated by Django 3.1.7 on 2021-04-25 07:25

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Players',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100)])),
                ('firstname', models.CharField(max_length=20)),
                ('lastname', models.CharField(max_length=20)),
                ('dob', models.DateField(blank=True, null=True, verbose_name='dob(dd/mm/year)')),
                ('height', models.CharField(default=0, max_length=20)),
                ('weight', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(400)])),
                ('position', models.CharField(choices=[('Point guard', 'Point guard'), ('Shooting guard', 'Shooting guard'), ('Small forward', 'Small forward'), ('Power forward', 'Power forward'), ('Center', 'Center')], max_length=20, null=True)),
                ('dominant_hand', models.CharField(choices=[('Right hand', 'Right hand'), ('Left hand', 'Left hand')], max_length=20, null=True)),
                ('nationality', models.CharField(max_length=50)),
                ('experience', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(30)])),
            ],
        ),
        migrations.CreateModel(
            name='Teams',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_name', models.CharField(max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TeamStats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('games', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(110)])),
                ('field_goals', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(5000)])),
                ('field_goal_attempts', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(10000)])),
                ('field_goal_percentage', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('three_point_field_goal', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(1000)])),
                ('three_point_field_goal_attempts', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(10000)])),
                ('three_point_field_goal_percentage', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('two_point_field_goal', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(1000)])),
                ('two_point_field_goal_attempts', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(10000)])),
                ('two_point_field_goal_percentage', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('free_throws', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(1000)])),
                ('free_throw_attempts', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(10000)])),
                ('free_throw_percentage', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('offensive_rebounds', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(1000)])),
                ('defensive_rebounds', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(10000)])),
                ('total_rebounds', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(10000)])),
                ('assists', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(1000)])),
                ('steals', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(1000)])),
                ('turnovers', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(1000)])),
                ('blocks', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(1000)])),
                ('personal_fouls', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(10000)])),
                ('points', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(10000)])),
                ('teamID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='run.teams')),
            ],
        ),
        migrations.CreateModel(
            name='Scores',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('xCoor', models.FloatField()),
                ('yCoor', models.FloatField()),
                ('isGoal', models.BooleanField()),
                ('playerID', models.ManyToManyField(to='run.Players')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerStats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('games', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(110)])),
                ('minutes_played', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('field_goals', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('field_goal_attempts', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('field_goal_percentage', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('three_point_field_goals', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('three_point_field_goal_attempts', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('three_point_field_goal_percentage', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('two_point_field_goals', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('two_point_field_goal_attempts', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('two_point_field_goal_percentage', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('free_throws', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('free_throw_attempts', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('free_throw_percentage', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('offensive_rebounds', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(1000)])),
                ('defensive_rebounds', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(10000)])),
                ('total_rebounds', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(10000)])),
                ('assists', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(1000)])),
                ('steals', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(1000)])),
                ('turnovers', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(1000)])),
                ('blocks', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(1000)])),
                ('personal_fouls', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(10000)])),
                ('points', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(10000)])),
                ('playerID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='run.players')),
            ],
        ),
        migrations.AddField(
            model_name='players',
            name='teamID',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='run.teams'),
        ),
    ]
